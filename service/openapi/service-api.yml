openapi: 3.0.0
paths:
  /questions:
    post:
      operationId: createQuestion
      summary: ""
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateQuestionDto"
      responses:
        "201":
          description: Create Question
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
      tags:
        &a1
        - questions
    get:
      operationId: getAllQuestions
      summary: ""
      parameters: []
      responses:
        "200":
          description: Returns All Questions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"
      tags: *a1
    delete:
      operationId: QuestionsController_removeAll
      parameters: []
      responses:
        "200":
          description: Returns No Content
      tags: *a1
  /questions/compute-personality:
    post:
      operationId: computePersonality
      summary: ""
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComputePersonalityDto"
      responses:
        "200":
          description: Returns Result of the Quiz
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Personality"
      tags: *a1
info:
  title: Questions example
  description: The questions API description
  version: "1.0"
  contact: {}
tags:
  - name: questions
    description: ""
servers: []
components:
  schemas:
    Answer:
      type: object
      properties:
        text:
          type: string
        weight:
          type: number
      required:
        - text
        - weight
    CreateQuestionDto:
      type: object
      properties:
        text:
          type: string
        answers:
          type: array
          items:
            $ref: "#/components/schemas/Answer"
      required:
        - text
        - answers
    Question:
      type: object
      properties:
        id:
          type: number
        text:
          type: string
        answers:
          type: array
          items:
            $ref: "#/components/schemas/Answer"
      required:
        - id
        - text
        - answers
    ComputePersonalityDto:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: "#/components/schemas/Answer"
      required:
        - answers
    Personality:
      type: object
      properties:
        result:
          type: string
          enum:
            - Introvert
            - Extrovert
      required:
        - result
